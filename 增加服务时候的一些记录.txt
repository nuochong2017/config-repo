1. spring cloud 启动服务的时候先找bootstrap.yml  ，然后才是application.yml ，基于config server实现动态更新，在服务中添加 bootstrap.yml，注册中心、配置中心写上去，
基于应用的数据源等其他配置写到git中

bootstrap.yml 示例
spring:
  application:
    name: user
  cloud:
    config:
#      uri: http://localhost:8000/
      #通过注册中心找config server
      discovery:
        service-id: NUOCHONG-CONFIG-SERVER
        enabled: true
  profiles:
    active: dev
server:
  port: 8801
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
2. config-repo中增加服务的自定义配置实例 例如数据库  消息组件 redis等
spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    password: xxxx
    url: jdbc:mysql://127.0.0.1:3306/seed?characterEncoding=utf-8&useSSL=false


3. 启动服务后注意查看日志，是否出现 Fetching config from server at: http://XXXX:8000/ 字样，出现了问题就不太
4. 启动服务过后，想配置服务器发一个post请求，注意看客户端是否有日志更新
   http://localhost:8000/actuator/bus-refresh